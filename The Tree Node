public class TreeNode<T> {
    private T value;
    private TreeNode<T> left; private TreeNode<T> right;
    
    public TreeNode(T c, TreeNode<T> l, TreeNode<T> r) 
    {
        value=c; left=l; right=r;
    }

    public TreeNode(T c) 
    {
        value = c;
        left = null;
        right = null; 
    }

    public T getValue()
    {
        return value; 
    }

    public TreeNode<T> getLeft() 
    {
        return left; 
    }

    public TreeNode<T> getRight() 
    {
        return right; 
    }

    public void setRight(TreeNode<T> n) 
    {
        right = n; 
    }

    public void setLeft(TreeNode<T> n)
    {
        left = n; 
    }

    public boolean isALeaf() 
    {
        if (getLeft() == null && getRight() == null) 
        {
            return true; 
        }
        else
        {
            return false;
        } 
    }
}
